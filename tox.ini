[tox]
isolated_build = True
envlist =
    style,
    docstyle,
    check-manifest,
    check-testdir,
    check-headers,
    check-apidocsdir,
    mkdocs,
    py39,
    py310,
    py311,
    py312,
    py313,
    coverage

# =============================================================================
# ENVS
# =============================================================================


[testenv:style]
description = "Runs code style checks with flake8 to ensure consistency and quality"
labels = static
skip_install = True
usedevelop = False
deps =
    tomli
    flake8
    flake8-import-order
    flake8-black
    flake8-builtins
commands =
        flake8 tests/ skcriteria/ {posargs}


[testenv:docstyle]
description = "Verifies documentation style following NumPy convention"
labels = static
skip_install = True
deps =
    tomli
    pydocstyle
    toml
commands =
    pydocstyle skcriteria/ --ignore-decorators=doc_inherit --convention=numpy --add-ignore=D401


[testenv:check-testdir]
description = "Checks the structure and organization of the test directory"
labels = static
skip_install = True
deps =
    https://github.com/quatrope/qafan/archive/refs/heads/master.zip
commands =
    check-testdir check tests/ --reference-dir skcriteria/ {posargs}


[testenv:check-apidocsdir]
description = "Verifies that API documentation is complete and correctly structured"
labels = static
skip_install = True
deps =
    https://github.com/quatrope/qafan/archive/refs/heads/master.zip
commands =
    check-apidocsdir check docs/source/api/ --reference-dir skcriteria/ {posargs}


[testenv:check-headers]
description = "Ensures all files have the correct headers according to the defined template"
labels = static
skip_install = True
deps =
    https://github.com/quatrope/qafan/archive/refs/heads/master.zip
commands =
    check-headers check skcriteria/ tests/ --header-template .header-template {posargs}


[testenv:check-manifest]
description = "Verifies that the MANIFEST.in file includes all necessary files for distribution"
labels = static
skip_install = True
usedevelop = False
deps = check-manifest
commands =
    check-manifest


[testenv:mkdocs]
description = "Generates HTML documentation using Sphinx from the source files"
labels = docs
usedevelop = True
skip_install = False
changedir = docs
deps =
    -r {toxinidir}/docs/requirements.txt
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees source {envtmpdir}/html


[testenv]
description = "Runs the test suite with coverage reporting"
labels = dynamic
deps =
    ipdb
    pytest
    pyquery
    pytest-cov
usedevelop = True
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
commands =
    pytest tests/ --cov-report= --cov=skcriteria --cov-append -vm '' {posargs}


[testenv:coverage]
description = "Combines coverage data from multiple Python versions and generates the final report"
labels = dynamic
deps =
    {[testenv]deps}  # This installs the same dependencies as [testenv]
    coverage
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage
depends = py39, py310, py311, py312, py313
commands =
    coverage combine
    coverage report -m --fail-under 91
